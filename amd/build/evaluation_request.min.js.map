{"version":3,"file":"evaluation_request.min.js","sources":["../src/evaluation_request.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Dynamically edits the evaluation_request mform.\n *\n * @module     block_evasys_sync/evaluation_request\n * @copyright  2022 Justus Dieckmann WWU\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport Prefetch from 'core/prefetch';\nimport {get_string as getString} from \"core/str\";\n\nconst savedDates = {};\n\n/**\n * Returns the date that is currently selected in the given date_time_selector.\n * @param {string} id\n * @returns {Date}\n */\nfunction getSelectorTime(id) {\n    const d = new Date();\n    d.setFullYear(\n        document.getElementById(id + '_year').value,\n        document.getElementById(id + '_month').value - 1,\n        document.getElementById(id + '_day').value\n    );\n    d.setHours(\n        document.getElementById(id + '_hour').value,\n        document.getElementById(id + '_minute').value,\n    );\n    return d;\n}\n\n/**\n * Sets the date_time_selector time.\n * @param {string} id\n * @param {Date} date\n */\nfunction setSelectorTime(id, date) {\n    document.getElementById(id + '_year').value = date.getFullYear();\n    document.getElementById(id + '_month').value = date.getMonth() + 1;\n    document.getElementById(id + '_day').value = date.getDate();\n    document.getElementById(id + '_hour').value = date.getHours();\n    document.getElementById(id + '_minute').value = date.getMinutes();\n}\n\n/**\n * Initializes things.\n */\nexport async function init() {\n    const select = document.getElementById('id_lsfcourses');\n    const evaltimes = document.getElementById('fitem_id_evaltimes');\n\n    const dateselectortemplate = document.getElementById('evasys-dateselectortemplate').innerHTML;\n\n    Prefetch.prefetchTemplate('block_evasys_sync/form');\n\n    const strings = await Promise.all([\n        getString('startondate', 'block_evasys_sync'),\n        getString('endondate', 'block_evasys_sync')\n    ]);\n    const startdateselectortemplate = dateselectortemplate.replaceAll('MyEvasysElementLabel', strings[0]);\n    const enddateselectortemplate = dateselectortemplate.replaceAll('MyEvasysElementLabel', strings[1]);\n\n    select.onchange = async() => {\n        for (const lsfcourse of evaltimes.children) {\n            const id = lsfcourse.getAttribute('data-evasys-lsfid');\n            savedDates[id] = {\n                start: getSelectorTime('id_evaltimestart_' + id),\n                end: getSelectorTime('id_evaltimeend_' + id)\n            };\n        }\n        let html = '';\n        evaltimes.disabled = true;\n        for (const option of select.selectedOptions) {\n            html += await Templates.render('block_evasys_sync/form', {\n                html: startdateselectortemplate.replaceAll('myevasyselementname', 'evaltimestart_' + option.value)\n                    + enddateselectortemplate.replaceAll('myevasyselementname', 'evaltimeend_' + option.value),\n                lsfid: option.value,\n                coursename: option.text\n            });\n        }\n        evaltimes.innerHTML = html;\n        for (const option of select.selectedOptions) {\n            if (option.value in savedDates) {\n                setSelectorTime('id_evaltimestart_' + option.value, savedDates[option.value].start);\n                setSelectorTime('id_evaltimeend_' + option.value, savedDates[option.value].end);\n            } else {\n                setSelectorTime('id_evaltimestart_' + option.value, new Date());\n                setSelectorTime('id_evaltimeend_' + option.value, new Date());\n            }\n        }\n        evaltimes.disabled = false;\n    };\n}"],"names":["select","document","getElementById","evaltimes","dateselectortemplate","innerHTML","prefetchTemplate","strings","Promise","all","startdateselectortemplate","replaceAll","enddateselectortemplate","onchange","async","lsfcourse","children","id","getAttribute","savedDates","start","getSelectorTime","end","html","disabled","option","selectedOptions","Templates","render","value","lsfid","coursename","text","setSelectorTime","Date","d","setFullYear","setHours","date","getFullYear","getMonth","getDate","getHours","getMinutes"],"mappings":";;;;;;;kGAiEUA,OAASC,SAASC,eAAe,iBACjCC,UAAYF,SAASC,eAAe,sBAEpCE,qBAAuBH,SAASC,eAAe,+BAA+BG,4BAE3EC,iBAAiB,gCAEpBC,cAAgBC,QAAQC,IAAI,EAC9B,mBAAU,cAAe,sBACzB,mBAAU,YAAa,uBAErBC,0BAA4BN,qBAAqBO,WAAW,uBAAwBJ,QAAQ,IAC5FK,wBAA0BR,qBAAqBO,WAAW,uBAAwBJ,QAAQ,IAEhGP,OAAOa,SAAWC,cACT,MAAMC,aAAaZ,UAAUa,SAAU,OAClCC,GAAKF,UAAUG,aAAa,qBAClCC,WAAWF,IAAM,CACbG,MAAOC,gBAAgB,oBAAsBJ,IAC7CK,IAAKD,gBAAgB,kBAAoBJ,SAG7CM,KAAO,GACXpB,UAAUqB,UAAW,MAChB,MAAMC,UAAUzB,OAAO0B,gBACxBH,YAAcI,mBAAUC,OAAO,yBAA0B,CACrDL,KAAMb,0BAA0BC,WAAW,sBAAuB,iBAAmBc,OAAOI,OACtFjB,wBAAwBD,WAAW,sBAAuB,eAAiBc,OAAOI,OACxFC,MAAOL,OAAOI,MACdE,WAAYN,OAAOO,OAG3B7B,UAAUE,UAAYkB,SACjB,MAAME,UAAUzB,OAAO0B,gBACpBD,OAAOI,SAASV,YAChBc,gBAAgB,oBAAsBR,OAAOI,MAAOV,WAAWM,OAAOI,OAAOT,OAC7Ea,gBAAgB,kBAAoBR,OAAOI,MAAOV,WAAWM,OAAOI,OAAOP,OAE3EW,gBAAgB,oBAAsBR,OAAOI,MAAO,IAAIK,MACxDD,gBAAgB,kBAAoBR,OAAOI,MAAO,IAAIK,OAG9D/B,UAAUqB,UAAW,oGAhFvBL,WAAa,YAOVE,gBAAgBJ,UACfkB,EAAI,IAAID,YACdC,EAAEC,YACEnC,SAASC,eAAee,GAAK,SAASY,MACtC5B,SAASC,eAAee,GAAK,UAAUY,MAAQ,EAC/C5B,SAASC,eAAee,GAAK,QAAQY,OAEzCM,EAAEE,SACEpC,SAASC,eAAee,GAAK,SAASY,MACtC5B,SAASC,eAAee,GAAK,WAAWY,OAErCM,WAQFF,gBAAgBhB,GAAIqB,MACzBrC,SAASC,eAAee,GAAK,SAASY,MAAQS,KAAKC,cACnDtC,SAASC,eAAee,GAAK,UAAUY,MAAQS,KAAKE,WAAa,EACjEvC,SAASC,eAAee,GAAK,QAAQY,MAAQS,KAAKG,UAClDxC,SAASC,eAAee,GAAK,SAASY,MAAQS,KAAKI,WACnDzC,SAASC,eAAee,GAAK,WAAWY,MAAQS,KAAKK"}